local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local player = Players.LocalPlayer

-- UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BondUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = cloneref(game:GetService("CoreGui"))

local bondLabel = Instance.new("TextLabel")
bondLabel.Size = UDim2.new(0.3, 0, 0.08, 0)
bondLabel.Position = UDim2.new(0.35, 0, 0.45, 0)
bondLabel.BackgroundTransparency = 1
bondLabel.TextScaled = true
bondLabel.Font = Enum.Font.SourceSansBold
bondLabel.TextColor3 = Color3.new(1, 1, 1)
bondLabel.TextStrokeTransparency = 0.5
bondLabel.Text = "Bond Collected: 0"
bondLabel.Parent = screenGui

-- Core
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local lockedY = root.Position.Y

local activateRemote = ReplicatedStorage:WaitForChild("Shared")
	:WaitForChild("Network")
	:WaitForChild("RemotePromise")
	:WaitForChild("Remotes")
	:WaitForChild("C_ActivateObject")

local function findNearestBond()
	local closest, shortestDist = nil, math.huge
	for _, item in ipairs(workspace.RuntimeItems:GetDescendants()) do
		if item:IsA("Model") and item.Name:lower() == "bond" then
			local primary = item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")
			if primary then
				local dist = (primary.Position - root.Position).Magnitude
				if dist < shortestDist then
					shortestDist = dist
					closest = item
				end
			end
		end
	end
	return closest
end

-- Y-axis lock
task.spawn(function()
	while true do
		if root and root.Parent then
			local pos = root.Position
			root.Velocity = Vector3.new(root.Velocity.X, 0, root.Velocity.Z)
			root.CFrame = CFrame.new(pos.X, lockedY, pos.Z)
		end
		task.wait()
	end
end)

local bondCount = 0

local function teleportTo(bond)
	local primary = bond.PrimaryPart or bond:FindFirstChildWhichIsA("BasePart")
	if not primary then return end

	root.CFrame = primary.CFrame + Vector3.new(0, 5, 0)

	local startTime = os.clock()
	while bond.Parent and os.clock() - startTime < 1 do
		activateRemote:FireServer(bond)
		task.wait(0.1)
	end

	if not bond.Parent then
		bondCount += 1
		bondLabel.Text = "Bond Collected: " .. bondCount
	end
end

local function collectNearby()
	while bondCount < 123 do
		local bond = findNearestBond()
		if bond then
			teleportTo(bond)
		else
			break
		end
		task.wait(0.05)
	end
end

-- Zigzag scan
local layerSize = 2048
local halfSize = layerSize / 2
local xStart = -halfSize
local xEnd = halfSize
local y = -50
local zStart = 30000
local zEnd = -49872
local zStep = -layerSize

local direction = 1
local function zigzag()
	local z = zStart
	while (zStep < 0 and z >= zEnd) or (zStep > 0 and z <= zEnd) do
		local startX = direction == 1 and xStart or xEnd
		local endX = direction == 1 and xEnd or xStart

		root.CFrame = CFrame.new(startX, y, z)
		task.wait(0.3)
		collectNearby()

		root.CFrame = CFrame.new(endX, y, z)
		task.wait(0.3)
		collectNearby()

		z += zStep
		direction *= -1

		if bondCount >= 123 then break end
	end
end

-- Start logic
collectNearby()
zigzag()

-- Wait for respawns and final pass
while bondCount < 110 do
	collectNearby()
	task.wait(1)
end

-- End UI
bondLabel.Position = UDim2.new(0.35, 0, 0.4, 0)
bondLabel.Text = "Total Bonds Collected: " .. bondCount

task.wait(5.5)

-- Teleport back to lobby (Dead Rails main place ID)
TeleportService:Teleport(16833423108, player)
