local Library = {}
local windowCount, xOffset = 0, 20
local activeComponents = {
    sizes = {},
    listOffset = {},
    pastSliders = {},
    colorPickers = {}
}
local destroyed

-- Cleanup existing UI if present
if game.CoreGui:FindFirstChild('HohaUiLib') then
    game.CoreGui:FindFirstChild('HohaUiLib'):Destroy()
    destroyed = true
end

-- Utility functions
local function lerp(a, b, c)
    return a + ((b - a) * c)
end

local function protectGUI(obj)
    if destroyed then
        obj.Parent = game.CoreGui
        return
    end
    if syn and syn.protect_gui then
        syn.protect_gui(obj)
        obj.Parent = game.CoreGui
    elseif PROTOSMASHER_LOADED then
        obj.Parent = get_hidden_gui()
    else
        obj.Parent = game.CoreGui
    end
end

local function dragify(obj)
    spawn(function()
        local initial, minitial, isDragging
        obj.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = true
                minitial = input.Position
                initial = obj.Position
                local connection
                connection = game:GetService('RunService').Stepped:Connect(function()
                    if isDragging then
                        local delta = Vector3.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y, 0) - minitial
                        obj.Position = UDim2.new(initial.X.Scale, initial.X.Offset + delta.X, initial.Y.Scale, initial.Y.Offset + delta.Y)
                    else
                        connection:Disconnect()
                    end
                end)
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        isDragging = false
                    end
                end)
            end
        end)
    end)
end

-- UI Initialization
local HohaUiLib = Instance.new("ScreenGui")
HohaUiLib.Name = "HohaUiLib"
protectGUI(HohaUiLib)

function Library:Destroy()
    HohaUiLib:Destroy()
end

-- Keybind to toggle UI visibility
function Library:Keybind(key)
    local uis = game:GetService("UserInputService")
    uis.InputBegan:Connect(function(input, gp)
        if not gp and input.KeyCode == Enum.KeyCode[key] then
            HohaUiLib.Enabled = not HohaUiLib.Enabled
        end
    end)
end

-- Create new window
function Library:Window(name)
    windowCount = windowCount + 1
    local winCount = windowCount
    local zIndex = winCount * 7
    local sizes, listOffset = activeComponents.sizes, activeComponents.listOffset

    local UiWindow = Instance.new("Frame")
    UiWindow.Name = "UiWindow"
    UiWindow.Parent = HohaUiLib
    UiWindow.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
    UiWindow.BorderColor3 = Color3.fromRGB(0, 151, 230)
    UiWindow.Position = UDim2.new(0, xOffset, 0, 20)
    UiWindow.Size = UDim2.new(0, 207, 0, 33)
    UiWindow.ZIndex = 4 + zIndex
    UiWindow.Active = true
    dragify(UiWindow)
    xOffset = xOffset + 230

    -- Header
    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.Parent = UiWindow
    Header.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    Header.BorderColor3 = Color3.fromRGB(0, 168, 255)
    Header.Size = UDim2.new(0, 207, 0, 26)
    Header.ZIndex = 5 + zIndex

    local HeaderText = Instance.new("TextLabel")
    HeaderText.Name = "HeaderText"
    HeaderText.Parent = Header
    HeaderText.BackgroundTransparency = 1
    HeaderText.Size = UDim2.new(0, 206, 0, 33)
    HeaderText.Font = Enum.Font.SourceSans
    HeaderText.Text = name or "Window"
    HeaderText.TextColor3 = Color3.fromRGB(47, 54, 64)
    HeaderText.TextSize = 17
    HeaderText.ZIndex = 6 + zIndex

    -- Minimization
    local Minimise = Instance.new("TextButton")
    Minimise.Name = "Minimise"
    Minimise.Parent = Header
    Minimise.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    Minimise.Position = UDim2.new(0, 185, 0, 2)
    Minimise.Size = UDim2.new(0, 22, 0, 22)
    Minimise.Font = Enum.Font.SourceSansLight
    Minimise.Text = "-"
    Minimise.TextColor3 = Color3.fromRGB(0, 0, 0)
    Minimise.TextSize = 20

    local Window = Instance.new("Frame")
    Window.Name = "Window"
    Window.Parent = Header
    Window.BackgroundColor3 = Color3.fromRGB(47, 54, 64)
    Window.BorderColor3 = Color3.fromRGB(47, 54, 64)
    Window.Size = UDim2.new(0, 207, 0, 33)
    Window.ZIndex = 1 + zIndex

    Minimise.MouseButton1Up:Connect(function()
        Window.Visible = not Window.Visible
        Minimise.Text = Window.Visible and "-" or "+"
    end)

    sizes[winCount], listOffset[winCount] = 33, 10

    -- Window Functions
    local functions = {}
    function functions:Button(name, callback)
        -- Implementation for Button
    end

    function functions:Label(text, color)
        -- Implementation for Label
    end

    function functions:Toggle(text, on, callback)
        -- Implementation for Toggle
    end

    function functions:Box(text, callback)
        -- Implementation for Box
    end

    function functions:Slider(text, min, max, default, callback)
        -- Implementation for Slider
    end

    function functions:ColorPicker(name, default, callback)
        -- Implementation for Color Picker
    end

    return functions
end

return Library
