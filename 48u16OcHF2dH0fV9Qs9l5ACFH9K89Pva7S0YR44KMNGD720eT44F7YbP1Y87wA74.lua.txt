local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\55\187","\133\25\149\137\225\34\129\168"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v102=0;local v103;while true do if (0==v102) then v103=v10(v8(v42,16));if v30 then local v121=0;local v122;while true do if (v121==0) then v122=v13(v103,v30);v30=nil;v121=1;end if (v121==1) then return v122;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=(v43/(2^(v44-1)))%(2^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v104-(v104%1) ;else local v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or (0 -0) ;end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (1==v48) then return (v50 * (493 -237)) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end if (v55==3) then if (v60==0) then if (v59==(0 -0)) then return v61 * 0 ;else local v123=0;while true do if (v123==0) then v60=620 -(555 + 64) ;v58=931 -(857 + 74) ;break;end end end elseif (v60==2047) then return ((v59==(568 -(367 + 201))) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (1==v55) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==0) then v56=v34();v57=v34();v55=1;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==3) then return v14(v65);end if (v63==2) then v65={};for v108=1, #v64 do v65[v108]=v10(v9(v11(v64,v108,v108)));end v63=3;end if (v63==0) then v64=nil;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=1;end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=0;local v81;local v82;while true do if (v80==0) then v81=v32();v82=nil;v80=1;end if (v80==1) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end end end v69[3]=v32();for v83=1,v34() do local v84=0;local v85;while true do if (v84==0) then v85=v32();if (v31(v85,1,1)==0) then local v117=v31(v85,2,1 + 2 );local v118=v31(v85,1 + 3 ,6);local v119={v33(),v33(),nil,nil};if (v117==0) then local v124=0;while true do if (0==v124) then v119[880 -(282 + 595) ]=v33();v119[4]=v33();break;end end elseif (v117==1) then v119[3]=v34();elseif (v117==2) then v119[3]=v34() -(2^16) ;elseif (v117==3) then v119[3]=v34() -(2^(1653 -(1523 + 114))) ;v119[4]=v33();end if (v31(v118,1 + 0 ,1 -0 )==1) then v119[1067 -(68 + 997) ]=v71[v119[2]];end if (v31(v118,2,2)==1) then v119[3]=v71[v119[3]];end if (v31(v118,3,3)==1) then v119[4]=v71[v119[1274 -(226 + 1044) ]];end v66[v83]=v119;end break;end end end for v86=1,v34() do v67[v86-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[4 -3 ];local v77=v73[2];local v78=v73[120 -(32 + 85) ];return function(...) local v88=v76;local v89=v77;local v90=v78;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v106=0,v96 do if (v106>=v90) then v94[v106-v90 ]=v95[v106 + 1 ];else v98[v106]=v95[v106 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v107=0;while true do if (0==v107) then v100=v88[v92];v101=v100[1 + 0 ];v107=1;end if (v107==1) then if (v101<=54) then if (v101<=26) then if (v101<=12) then if (v101<=(2 + 3)) then if (v101<=2) then if (v101<=0) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;elseif (v101==1) then local v165=0;local v166;while true do if (v165==0) then v166=v100[2];v98[v166]=v98[v166](v21(v98,v166 + 1 ,v93));break;end end else local v167=0;local v168;local v169;local v170;local v171;while true do if (v167==2) then for v437=v168,v93 do local v438=0;while true do if (v438==0) then v171=v171 + 1 ;v98[v437]=v169[v171];break;end end end break;end if (v167==1) then v93=(v170 + v168) -1 ;v171=957 -(892 + 65) ;v167=2;end if (v167==0) then v168=v100[2];v169,v170=v91(v98[v168](v98[v168 + 1 ]));v167=1;end end end elseif (v101<=(7 -4)) then local v138=v100[2];do return v98[v138](v21(v98,v138 + 1 ,v100[3]));end elseif (v101==4) then v98[v100[2]]=v100[3] + v98[v100[4]] ;elseif (v100[2]>v98[v100[6 -2 ]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=8) then if (v101<=6) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101>7) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101<=10) then if (v101==(15 -6)) then v98[v100[2]]= #v98[v100[3]];else v98[v100[2]]();end elseif (v101==11) then for v330=v100[2],v100[3] do v98[v330]=nil;end else v98[v100[2]]=v74[v100[3]];end elseif (v101<=19) then if (v101<=15) then if (v101<=13) then v98[v100[2]]=v100[3]~=0 ;elseif (v101==14) then v98[v100[2]]=v100[3];else v98[v100[2]]=v98[v100[3]];end elseif (v101<=17) then if (v101>16) then v98[v100[2]]=v98[v100[3]][v100[4]];else local v184=v100[2];local v185=v100[354 -(87 + 263) ];local v186=v184 + 2 ;local v187={v98[v184](v98[v184 + 1 ],v98[v186])};for v332=1,v185 do v98[v186 + v332 ]=v187[v332];end local v188=v187[181 -(67 + 113) ];if v188 then v98[v186]=v188;v92=v100[3];else v92=v92 + 1 + 0 ;end end elseif (v101>18) then do return v98[v100[2]]();end else v98[v100[2]]=v98[v100[7 -4 ]] + v100[4] ;end elseif (v101<=(17 + 5)) then if (v101<=(79 -59)) then local v141=v100[954 -(802 + 150) ];local v142,v143=v91(v98[v141](v21(v98,v141 + 1 ,v93)));v93=(v143 + v141) -1 ;local v144=0;for v163=v141,v93 do local v164=0;while true do if (v164==0) then v144=v144 + 1 ;v98[v163]=v142[v144];break;end end end elseif (v101>(56 -35)) then local v190=v100[2];v98[v190]=v98[v190](v98[v190 + 1 ]);else v98[v100[2]]=v74[v100[3]];end elseif (v101<=24) then if (v101==23) then local v194=0;local v195;while true do if (v194==0) then v195=v100[2];do return v21(v98,v195,v195 + v100[3] );end break;end end else local v196=0;local v197;while true do if (v196==0) then v197=v100[2];v98[v197]=v98[v197]();break;end end end elseif (v101>(45 -20)) then local v198=0;local v199;while true do if (v198==0) then v199=v100[2];v98[v199](v21(v98,v199 + 1 ,v93));break;end end else local v200=0;local v201;local v202;while true do if (v200==0) then v201=v100[2 + 0 ];v202={};v200=1;end if (v200==1) then for v439=1, #v97 do local v440=v97[v439];for v468=0, #v440 do local v469=v440[v468];local v470=v469[1];local v471=v469[2];if ((v470==v98) and (v471>=v201)) then local v485=0;while true do if (v485==0) then v202[v471]=v470[v471];v469[1]=v202;break;end end end end end break;end end end elseif (v101<=40) then if (v101<=33) then if (v101<=29) then if (v101<=27) then do return v98[v100[2]];end elseif (v101==28) then local v203=0;local v204;local v205;while true do if (v203==1) then v98[v204 + (998 -(915 + 82)) ]=v205;v98[v204]=v205[v100[4]];break;end if (v203==0) then v204=v100[2];v205=v98[v100[3]];v203=1;end end else local v206=v100[2];local v207={v98[v206](v98[v206 + 1 ])};local v208=0;for v335=v206,v100[4] do local v336=0;while true do if (v336==0) then v208=v208 + 1 ;v98[v335]=v207[v208];break;end end end end elseif (v101<=31) then if (v101==30) then local v209=v100[2];v98[v209]=v98[v209](v21(v98,v209 + 1 ,v93));else v98[v100[2]]=v100[3]~=0 ;v92=v92 + 1 ;end elseif (v101>32) then if (v98[v100[2]]==v100[11 -7 ]) then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v100[3]~=0 ;end elseif (v101<=36) then if (v101<=34) then v74[v100[3]]=v98[v100[2]];elseif (v101>35) then local v213=v89[v100[3]];local v214;local v215={};v214=v18({},{[v7("\208\15\245\218\254\234\40","\154\143\80\156\180")]=function(v337,v338) local v339=v215[v338];return v339[1][v339[2 + 0 ]];end,[v7("\141\12\5\77\89\52\11\129\183\43","\229\210\83\107\40\46\93\101")]=function(v340,v341,v342) local v343=v215[v341];v343[1][v343[2]]=v342;end});for v345=1 -0 ,v100[4] do local v346=0;local v347;while true do if (v346==1) then if (v347[1]==(33 -18)) then v215[v345-1 ]={v98,v347[3]};else v215[v345-(1 -0) ]={v74,v347[3]};end v97[ #v97 + 1 ]=v215;break;end if (0==v346) then v92=v92 + (1188 -(1069 + 118)) ;v347=v88[v92];v346=1;end end end v98[v100[2]]=v40(v213,v214,v75);else v98[v100[2]][v98[v100[1 + 2 ]]]=v100[4];end elseif (v101<=38) then if (v101>37) then do return v98[v100[2]]();end else v98[v100[3 -1 ]]=v100[3] + v98[v100[4]] ;end elseif (v101==39) then v98[v100[2]]();elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3 + 0 ];end elseif (v101<=47) then if (v101<=43) then if (v101<=41) then do return v98[v100[2]];end elseif (v101==42) then local v220=0;local v221;local v222;while true do if (v220==1) then for v445=1, #v97 do local v446=v97[v445];for v472=0, #v446 do local v473=v446[v472];local v474=v473[1];local v475=v473[2];if ((v474==v98) and (v475>=v221)) then local v486=0;while true do if (v486==0) then v222[v475]=v474[v475];v473[1]=v222;break;end end end end end break;end if (v220==0) then v221=v100[2];v222={};v220=1;end end else v98[v100[2]][v100[794 -(368 + 423) ]]=v100[4];end elseif (v101<=45) then if (v101>44) then local v225=v100[6 -4 ];local v226,v227=v91(v98[v225](v21(v98,v225 + 1 ,v93)));v93=(v227 + v225) -1 ;local v228=0;for v348=v225,v93 do v228=v228 + 1 ;v98[v348]=v226[v228];end else local v229=v100[2];v98[v229](v98[v229 + 1 ]);end elseif (v101>46) then v98[v100[2]][v100[3]]=v98[v100[4]];else local v232=v100[2];do return v98[v232](v21(v98,v232 + 1 ,v100[21 -(10 + 8) ]));end end elseif (v101<=50) then if (v101<=48) then v98[v100[2]][v98[v100[3]]]=v100[4];elseif (v101>49) then if (v100[7 -5 ]==v98[v100[4]]) then v92=v92 + (443 -(416 + 26)) ;else v92=v100[3];end else local v233=v100[2];local v234=v100[4];local v235=v233 + (6 -4) ;local v236={v98[v233](v98[v233 + 1 ],v98[v235])};for v351=1,v234 do v98[v235 + v351 ]=v236[v351];end local v237=v236[1];if v237 then local v376=0;while true do if (v376==0) then v98[v235]=v237;v92=v100[4 -1 ];break;end end else v92=v92 + 1 ;end end elseif (v101<=52) then if (v101>51) then local v238=0;while true do if (0==v238) then v98[v100[2]]=v100[3]~=0 ;v92=v92 + 1 ;break;end end else v98[v100[2]]= not v98[v100[3]];end elseif (v101>53) then local v240=v100[2];local v241={v98[v240](v21(v98,v240 + 1 ,v93))};local v242=0;for v354=v240,v100[4] do local v355=0;while true do if (v355==0) then v242=v242 + 1 ;v98[v354]=v241[v242];break;end end end else do return;end end elseif (v101<=(519 -(145 + 293))) then if (v101<=67) then if (v101<=60) then if (v101<=57) then if (v101<=55) then local v149=0;local v150;while true do if (v149==0) then v150=v100[2];do return v21(v98,v150,v93);end break;end end elseif (v101>56) then local v243=v98[v100[4]];if  not v243 then v92=v92 + 1 ;else local v377=0;while true do if (0==v377) then v98[v100[2]]=v243;v92=v100[3];break;end end end elseif (v98[v100[2]]~=v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=58) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101==59) then local v244=0;local v245;local v246;local v247;while true do if (v244==1) then v247=0;for v449=v245,v100[4] do local v450=0;while true do if (0==v450) then v247=v247 + 1 ;v98[v449]=v246[v247];break;end end end break;end if (v244==0) then v245=v100[2];v246={v98[v245](v21(v98,v245 + 1 ,v93))};v244=1;end end else local v248=0;local v249;while true do if (v248==0) then v249=v100[2];v98[v249]=v98[v249](v21(v98,v249 + 1 ,v100[3]));break;end end end elseif (v101<=63) then if (v101<=61) then v98[v100[2]]=v75[v100[3]];elseif (v101==(1548 -(998 + 488))) then local v250=0;local v251;local v252;while true do if (v250==1) then v98[v251 + 1 ]=v252;v98[v251]=v252[v100[4]];break;end if (v250==0) then v251=v100[2];v252=v98[v100[3]];v250=1;end end else local v253=v100[2];v98[v253](v21(v98,v253 + 1 + 0 ,v100[3]));end elseif (v101<=65) then if (v101==64) then v98[v100[2]][v100[3]]=v100[4];else local v256=0;local v257;local v258;local v259;while true do if (0==v256) then v257=v100[2 + 0 ];v258=v98[v257 + 2 ];v256=1;end if (v256==1) then v259=v98[v257] + v258 ;v98[v257]=v259;v256=2;end if (v256==2) then if (v258>0) then if (v259<=v98[v257 + 1 ]) then local v489=0;while true do if (v489==0) then v92=v100[3];v98[v257 + 3 ]=v259;break;end end end elseif (v259>=v98[v257 + 1 ]) then local v490=0;while true do if (0==v490) then v92=v100[3];v98[v257 + (775 -(201 + 571)) ]=v259;break;end end end break;end end end elseif (v101>66) then v98[v100[2]][v100[1141 -(116 + 1022) ]]=v98[v100[4]];else local v262=0;local v263;local v264;local v265;while true do if (v262==2) then if (v264>0) then if (v265<=v98[v263 + 1 ]) then v92=v100[3];v98[v263 + 3 ]=v265;end elseif (v265>=v98[v263 + (4 -3) ]) then local v493=0;while true do if (v493==0) then v92=v100[3];v98[v263 + 2 + 1 ]=v265;break;end end end break;end if (v262==0) then v263=v100[2];v264=v98[v263 + 2 ];v262=1;end if (1==v262) then v265=v98[v263] + v264 ;v98[v263]=v265;v262=2;end end end elseif (v101<=(270 -196)) then if (v101<=70) then if (v101<=68) then do return;end elseif (v101>69) then v98[v100[2]]=v98[v100[3]][v98[v100[14 -10 ]]];else local v268=0;local v269;while true do if (0==v268) then v269=v100[861 -(814 + 45) ];v98[v269]=v98[v269](v98[v269 + 1 ]);break;end end end elseif (v101<=72) then if (v101>71) then v98[v100[2]]={};else local v271=v98[v100[4]];if v271 then v92=v92 + 1 ;else v98[v100[2]]=v271;v92=v100[3];end end elseif (v101>73) then v92=v100[3];else v98[v100[2]]={};end elseif (v101<=77) then if (v101<=75) then local v154=0;local v155;local v156;while true do if (v154==1) then for v381=v155 + 1 ,v93 do v15(v156,v98[v381]);end break;end if (v154==0) then v155=v100[2];v156=v98[v155];v154=1;end end elseif (v101>76) then if (v100[2]>v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[7 -4 ];end else v74[v100[3]]=v98[v100[2]];end elseif (v101<=79) then if (v101==(5 + 73)) then local v276=0;local v277;local v278;local v279;while true do if (1==v276) then v279=v98[v277 + 2 ];if (v279>0) then if (v278>v98[v277 + 1 ]) then v92=v100[2 + 1 ];else v98[v277 + 3 ]=v278;end elseif (v278<v98[v277 + 1 ]) then v92=v100[3];else v98[v277 + 3 ]=v278;end break;end if (v276==0) then v277=v100[2];v278=v98[v277];v276=1;end end else local v280=0;local v281;local v282;local v283;while true do if (v280==1) then v283=v98[v281 + 2 ];if (v283>0) then if (v282>v98[v281 + (886 -(261 + 624)) ]) then v92=v100[3];else v98[v281 + 3 ]=v282;end elseif (v282<v98[v281 + 1 ]) then v92=v100[3];else v98[v281 + 3 ]=v282;end break;end if (v280==0) then v281=v100[2];v282=v98[v281];v280=1;end end end elseif (v101==80) then local v284=0;local v285;while true do if (v284==0) then v285=v100[2];v98[v285](v21(v98,v285 + 1 ,v93));break;end end else local v286=v100[2];v98[v286](v98[v286 + 1 ]);end elseif (v101<=(168 -73)) then if (v101<=88) then if (v101<=84) then if (v101<=82) then local v157=v100[2];do return v21(v98,v157,v93);end elseif (v101>83) then local v287=v100[2];v98[v287](v21(v98,v287 + 1 ,v100[3]));else local v288=v100[2];local v289={v98[v288](v98[v288 + 1 ])};local v290=0;for v359=v288,v100[4] do v290=v290 + 1 ;v98[v359]=v289[v290];end end elseif (v101<=86) then if (v101>85) then local v291=v100[2];local v292,v293=v91(v98[v291](v21(v98,v291 + 1 ,v100[1083 -(1020 + 60) ])));v93=(v293 + v291) -1 ;local v294=0;for v362=v291,v93 do v294=v294 + 1 ;v98[v362]=v292[v294];end elseif (v98[v100[2]]==v100[1427 -(630 + 793) ]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==87) then local v295=0;local v296;while true do if (v295==0) then v296=v98[v100[4]];if  not v296 then v92=v92 + 1 ;else local v480=0;while true do if (v480==0) then v98[v100[2]]=v296;v92=v100[3];break;end end end break;end end else local v297=0;local v298;local v299;local v300;local v301;while true do if (0==v297) then v298=v100[2];v299,v300=v91(v98[v298](v98[v298 + 1 ]));v297=1;end if (v297==1) then v93=(v300 + v298) -(3 -2) ;v301=0;v297=2;end if (v297==2) then for v451=v298,v93 do local v452=0;while true do if (v452==0) then v301=v301 + 1 ;v98[v451]=v299[v301];break;end end end break;end end end elseif (v101<=91) then if (v101<=89) then v92=v100[14 -11 ];elseif (v101>90) then v98[v100[2]]= #v98[v100[3]];else local v303=0;local v304;while true do if (v303==0) then v304=v100[2];v98[v304]=v98[v304](v21(v98,v304 + 1 ,v100[2 + 1 ]));break;end end end elseif (v101<=93) then if (v101>92) then for v365=v100[6 -4 ],v100[3] do v98[v365]=nil;end else v98[v100[2]]=v98[v100[3]] + v100[1751 -(760 + 987) ] ;end elseif (v101==94) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif  not v98[v100[2]] then v92=v92 + (1914 -(1789 + 124)) ;else v92=v100[3];end elseif (v101<=102) then if (v101<=98) then if (v101<=96) then v98[v100[2]]=v98[v100[3]][v100[4]];elseif (v101>97) then local v306=0;local v307;local v308;local v309;local v310;while true do if (0==v306) then v307=v100[2];v308,v309=v91(v98[v307](v21(v98,v307 + (767 -(745 + 21)) ,v100[3])));v306=1;end if (v306==1) then v93=(v309 + v307) -1 ;v310=0;v306=2;end if (v306==2) then for v453=v307,v93 do v310=v310 + 1 ;v98[v453]=v308[v310];end break;end end else v98[v100[2]]=v75[v100[3]];end elseif (v101<=(35 + 65)) then if (v101==99) then local v313=v98[v100[4]];if v313 then v92=v92 + 1 ;else v98[v100[2]]=v313;v92=v100[3];end else local v314=0;local v315;local v316;while true do if (0==v314) then v315=v100[2];v316=v98[v315];v314=1;end if (v314==1) then for v456=v315 + (2 -1) ,v93 do v15(v316,v98[v456]);end break;end end end elseif (v101==101) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];elseif (v98[v100[2]]~=v98[v100[15 -11 ]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=105) then if (v101<=103) then v98[v100[2]]=v98[v100[3]];elseif (v101==104) then v98[v100[2]]=v100[3];else local v321=0;local v322;local v323;local v324;while true do if (v321==1) then v324={};v323=v18({},{[v7("\13\233\137\32\236\8\90","\34\82\182\224\78\136\109")]=function(v457,v458) local v459=v324[v458];return v459[1][v459[2]];end,[v7("\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v460,v461,v462) local v463=0;local v464;while true do if (v463==0) then v464=v324[v461];v464[1][v464[2]]=v462;break;end end end});v321=2;end if (v321==2) then for v465=1,v100[4] do local v466=0;local v467;while true do if (v466==1) then if (v467[1]==15) then v324[v465-(1 + 0) ]={v98,v467[3]};else v324[v465-1 ]={v74,v467[3 + 0 ]};end v97[ #v97 + 1 ]=v324;break;end if (v466==0) then v92=v92 + 1 ;v467=v88[v92];v466=1;end end end v98[v100[2]]=v40(v322,v323,v75);break;end if (v321==0) then v322=v89[v100[3]];v323=nil;v321=1;end end end elseif (v101<=107) then if (v101==106) then local v325=v100[2];v98[v325]=v98[v325]();else v98[v100[2]]= not v98[v100[3]];end elseif (v101==108) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v98[v100[3]][v98[v100[1059 -(87 + 968) ]]];end v92=v92 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);